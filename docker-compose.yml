services:
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "file:./prisma/dev.db"
    volumes:
      - ./shared/prisma:/app/shared/prisma
    working_dir: /app/shared/prisma
    command: |+
      sh -c "
        bunx prisma migrate deploy --schema=/app/shared/prisma/schema.prisma &&
        bunx prisma generate --schema=/app/shared/prisma/schema.prisma
      "
        
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    env_file:
      - .env
    environment:
      CLIENT_URL: ${CLIENT_URL:-http://localhost:5173}
      API_URL: ${API_URL:-http://localhost:3000/api}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_URL: ${DATABASE_URL:-file:./prisma/dev.db}
    ports:
      - "3000:3000"
    depends_on:
      migrate:
        condition: service_completed_successfully
    volumes:
      - ./shared/prisma:/app/shared/prisma
    restart: unless-stopped

  smtp:
    build:
      context: .
      dockerfile: apps/smtp/Dockerfile
    environment:
      SMTP_PORT: 25
      GMAIL_USER: ${GMAIL_USER:-nischalm3pro@gmail.com}
      GMAIL_APP_PASSWORD: ${GMAIL_APP_PASSWORD}
      DATABASE_URL: ${DATABASE_URL:-file:./prisma/dev.db}
      API_URL: ${API_URL:-http://localhost:3000/api}
    cap_add:
      - NET_BIND_SERVICE
    ports:
      - "25:25"
    depends_on:
      migrate:
        condition: service_completed_successfully
    volumes:
      - ./shared/prisma:/app/shared/prisma
    restart: unless-stopped

  ui:
    build:
      context: .
      dockerfile: apps/ui/Dockerfile.node
    environment:
      API_URL: ${API_URL:-http://api:3000/api}
      CLIENT_URL: ${CLIENT_URL:-http://localhost:5173}
    ports:
      - "5173:3000"
    depends_on:
      migrate:
        condition: service_completed_successfully
    restart: unless-stopped

  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - DOMAIN=${DOMAIN:-localhost}
    depends_on:
      - api
      - ui
    restart: unless-stopped
    networks:
      - snehaa-network

volumes:
  caddy_data:
    driver: local
  caddy_config:
    driver: local

networks:
  snehaa-network:
    driver: bridge
